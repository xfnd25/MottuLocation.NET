// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuLocation.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuLocation.Migrations
{
    [DbContext(typeof(MottuLocationDbContext))]
    [Migration("20250517011628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuLocation.Entities.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("RfidTag")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("RfidTag")
                        .IsUnique();

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MottuLocation.Entities.Movimentacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<long>("MotoId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<long>("SensorId")
                        .HasColumnType("NUMBER(19)");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("SensorId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("MottuLocation.Entities.Sensor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(255)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PosicaoX")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PosicaoY")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("MottuLocation.Entities.Movimentacao", b =>
                {
                    b.HasOne("MottuLocation.Entities.Moto", "Moto")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottuLocation.Entities.Sensor", "Sensor")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("MottuLocation.Entities.Moto", b =>
                {
                    b.Navigation("Movimentacoes");
                });

            modelBuilder.Entity("MottuLocation.Entities.Sensor", b =>
                {
                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
